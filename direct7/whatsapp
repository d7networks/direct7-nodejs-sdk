const axios = require('axios');

class WhatsApp {
  constructor(client) {
    this.client = client;
  }

  async sendWhatsAppFreeformMessage(originator, recipient, messageType, {
    firstName,
    lastName,
    displayName,
    phone,
    email,
    url,
    latitude,
    longitude,
    locationName,
    locationAddress,
    attachmentType,
    attachmentUrl,
    attachmentCaption,
    messageText
  }) {
    const message = {
      originator,
      recipients: [{ recipient }],
      content: {
        message_type: messageType
      }
    };

    if (messageType === 'CONTACTS') {
      message.content.contact = {
        first_name: firstName,
        last_name: lastName,
        display_name: displayName,
        phone,
        email,
        url
      };
    } else if (messageType === 'LOCATION') {
      message.content.location = {
        latitude,
        longitude,
        name: locationName,
        address: locationAddress
      };
    } else if (messageType === 'ATTACHMENT') {
      message.content.attachment = {
        attachment_type: attachmentType,
        attachment_url: attachmentUrl,
        attachment_caption: attachmentCaption
      };
    } else if (messageType === 'TEXT') {
      message.content.message_text = messageText;
    }

    try {
      const response = await this.client.post('/whatsapp/v1/send', { params: { messages: [message] } });
      console.log('WhatsApp message sent successfully.');
      return response;
    } catch (error) {
      console.log(`Failed to send WhatsApp message: ${error.message}`);
      throw error;
    }
  }

  async sendWhatsAppTemplatedMessage(originator, recipient, templateId, bodyParameterValues, {
    mediaType,
    mediaUrl,
    latitude,
    longitude,
    locationName,
    locationAddress
  }) {
    const message = {
      originator,
      recipients: [{ recipient }],
      content: {
        message_type: 'TEMPLATE',
        template: {
          template_id: templateId,
          body_parameter_values: bodyParameterValues
        }
      }
    };

    if (mediaType) {
      if (mediaType === 'location') {
        message.content.template.media = {
          media_type: 'location',
          location: {
            latitude,
            longitude,
            name: locationName,
            address: locationAddress
          }
        };
      } else {
        message.content.template.media = { media_type: mediaType, media_url: mediaUrl };
      }
    }

    try {
      const response = await this.client.post('/whatsapp/v1/send', { params: { messages: [message] } });
      console.log('WhatsApp templated message sent successfully.');
      return response;
    } catch (error) {
      console.log(`Failed to send WhatsApp templated message: ${error.message}`);
      throw error;
    }
  }

  async getStatus(requestId) {
    try {
      const response = await this.client.get(`/whatsapp/v1/report/${requestId}`);
      console.log('WhatsApp message status retrieved successfully.');
      return response;
    } catch (error) {
      console.log(`Failed to retrieve WhatsApp message status: ${error.message}`);
      throw error;
    }
  }
}

module.exports = WhatsApp;
